START Program

INITIALIZE game variables:
    g = 0
    clickg = 1
    Define generator types:
        Standard, Massive, Industrial
    Set initial prices, stock, levels, and G per second for each generator

DEFINE Generator Class:
    - Constructor takes level
    - start_generating() increases g by g_given1 every second
    - lvlup() increases generator level and doubles g_given1

DEFINE BetterGenerator Class (similar to Generator)
    - Uses g_given2 and upgrade_cost2
    - lvlup() increases level and multiplies g_given2 by 2

DEFINE IndusGenerator Class (similar to above)
    - Uses g_given3 and upgrade_cost3
    - lvlup() increases level and multiplies g_given3 by 2

DEFINE click():
    - Increase g by clickg
    - Update g_label on screen

DEFINE shop():
    - Randomly restock Better and Industrial generators
    - Display generator items, prices, and stock
    - Allow increase/decrease purchase amount
    - BUY: Deduct G, instantiate generator objects, update stock
    - RESTOCK: Spend 100G to refill standard generator stock and re-randomize others

DEFINE upgrade():
    - Show upgrade screen with 3 types of generators
    - UPGRADE: For each generator type, increase their level, cost, and G generation rate

DEFINE gamble():
    - Show slot machine interface
    - Deduct entry fee
    - Randomize 3 symbols
    - Apply results:
        - All 0: Bad luck → Random penalty
        - All #: Free reroll
        - All 7: Jackpot → Gain G
    - Update screen after roll

DEFINE increase_clickg():
    - clickg = 1 + total generators owned
    - Update button text

DEFINE save_game():
    - Store all important variables and generator counts into JSON file

DEFINE load_game():
    - Load variables from JSON file
    - Re-instantiate generator objects using saved levels/counts
    - Update UI labels

CREATE MAIN WINDOW:
    - Show current G
    - Buttons: Click, Shop, Gamble, Upgrade, Save, Load, Quit
    - Label for save/load messages
    - Autosave every 60 seconds

START Tkinter mainloop

END Program






